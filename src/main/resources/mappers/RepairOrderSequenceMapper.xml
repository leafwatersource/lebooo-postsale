<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.api.lebooo.dao.RepairOrderSequenceMapper">
  <resultMap id="BaseResultMap" type="com.api.lebooo.model.RepairOrderSequence">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="repair_order_id" jdbcType="BIGINT" property="repairOrderId" />
    <result column="is_mark" jdbcType="INTEGER" property="isMark" />
    <result column="distri_time" jdbcType="TIMESTAMP" property="distriTime" />
    <result column="wait_time" jdbcType="TIMESTAMP" property="waitTime" />
    <result column="send_time" jdbcType="TIMESTAMP" property="sendTime" />
    <result column="finish_time" jdbcType="TIMESTAMP" property="finishTime" />
    <result column="reject_time" jdbcType="TIMESTAMP" property="rejectTime" />
    <result column="cancel_time" jdbcType="TIMESTAMP" property="cancelTime" />
    <result column="exceed_time" jdbcType="TIMESTAMP" property="exceedTime" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="is_del" jdbcType="INTEGER" property="isDel" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Pagination_Sql">
    <if test="isPage == 1">
      limit  #{pageIndex,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
    </if>
  </sql>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, repair_order_id, is_mark, distri_time, wait_time, send_time, finish_time, reject_time, 
    cancel_time, exceed_time, account_id, is_del, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.api.lebooo.model.RepairOrderSequenceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from repair_order_sequence
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="Pagination_Sql" />
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from repair_order_sequence
    where id = #{id,jdbcType=BIGINT}
  </select>
  <insert id="insertSelective" keyProperty="id" parameterType="com.api.lebooo.model.RepairOrderSequence" useGeneratedKeys="true">
    insert into repair_order_sequence
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="repairOrderId != null">
        repair_order_id,
      </if>
      <if test="isMark != null">
        is_mark,
      </if>
      <if test="distriTime != null">
        distri_time,
      </if>
      <if test="waitTime != null">
        wait_time,
      </if>
      <if test="sendTime != null">
        send_time,
      </if>
      <if test="finishTime != null">
        finish_time,
      </if>
      <if test="rejectTime != null">
        reject_time,
      </if>
      <if test="cancelTime != null">
        cancel_time,
      </if>
      <if test="exceedTime != null">
        exceed_time,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="repairOrderId != null">
        #{repairOrderId,jdbcType=BIGINT},
      </if>
      <if test="isMark != null">
        #{isMark,jdbcType=INTEGER},
      </if>
      <if test="distriTime != null">
        #{distriTime,jdbcType=TIMESTAMP},
      </if>
      <if test="waitTime != null">
        #{waitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sendTime != null">
        #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishTime != null">
        #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rejectTime != null">
        #{rejectTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cancelTime != null">
        #{cancelTime,jdbcType=TIMESTAMP},
      </if>
      <if test="exceedTime != null">
        #{exceedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.api.lebooo.model.RepairOrderSequenceExample" resultType="java.lang.Integer">
    select count(*) from repair_order_sequence
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update repair_order_sequence
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.repairOrderId != null">
        repair_order_id = #{record.repairOrderId,jdbcType=BIGINT},
      </if>
      <if test="record.isMark != null">
        is_mark = #{record.isMark,jdbcType=INTEGER},
      </if>
      <if test="record.distriTime != null">
        distri_time = #{record.distriTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.waitTime != null">
        wait_time = #{record.waitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sendTime != null">
        send_time = #{record.sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.finishTime != null">
        finish_time = #{record.finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rejectTime != null">
        reject_time = #{record.rejectTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.cancelTime != null">
        cancel_time = #{record.cancelTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.exceedTime != null">
        exceed_time = #{record.exceedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.isDel != null">
        is_del = #{record.isDel,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.api.lebooo.model.RepairOrderSequence">
    update repair_order_sequence
    <set>
      <if test="repairOrderId != null">
        repair_order_id = #{repairOrderId,jdbcType=BIGINT},
      </if>
      <if test="isMark != null">
        is_mark = #{isMark,jdbcType=INTEGER},
      </if>
      <if test="distriTime != null">
        distri_time = #{distriTime,jdbcType=TIMESTAMP},
      </if>
      <if test="waitTime != null">
        wait_time = #{waitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sendTime != null">
        send_time = #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishTime != null">
        finish_time = #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rejectTime != null">
        reject_time = #{rejectTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cancelTime != null">
        cancel_time = #{cancelTime,jdbcType=TIMESTAMP},
      </if>
      <if test="exceedTime != null">
        exceed_time = #{exceedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>